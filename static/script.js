// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –≤—Ö–æ–¥–∞
function openLogin() {
    closeAll();
    document.getElementById("overlay").style.zIndex = "1500";
    document.getElementById("loginModal").style.zIndex = "2000";
    document.getElementById("overlay").classList.add("active");
    document.getElementById("loginModal").classList.add("active");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function openRegister() {
    closeAll();
    let overlay = document.getElementById("overlay");
    let registerModal = document.getElementById("registerModal");

    if (overlay && registerModal) {
    document.getElementById("overlay").style.zIndex = "1500";
    document.getElementById("registerModal").style.zIndex = "2000";
    document.getElementById("overlay").classList.add("active");
    document.getElementById("registerModal").classList.add("active");
    } else {
        console.error("‚ùå –û—à–∏–±–∫–∞: –û–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
function togglePasswordVisibility(inputId) {
    const input = document.getElementById(inputId);
    const toggleIcon = document.querySelector(`#${inputId} + .toggle-password`);

    if (input.type === "password") {
        input.type = "text";
        toggleIcon.textContent = "üëÅÔ∏è";
    } else {
        input.type = "password";
        toggleIcon.textContent = "üëÅÔ∏è‚Äçüó®Ô∏è";
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
function handlePasswordInput(input) {
    const toggleIcon = input.nextElementSibling;
    if (input.value.length > 0) {
        toggleIcon.classList.add("visible");
    } else {
        toggleIcon.classList.remove("visible");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –∏ —Å–±—Ä–æ—Å–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
function closeAll() {
    document.getElementById("overlay").classList.remove("active");
    document.getElementById("loginModal").classList.remove("active");
    document.getElementById("registerModal").classList.remove("active");
    document.getElementById("forgotPasswordModal").classList.remove("active");
    document.getElementById("newPasswordModal").classList.remove("active");

    const loginFields = document.querySelectorAll("#loginModal input");
    loginFields.forEach(field => {
        field.value = "";
        field.classList.remove("error-input");
        const toggleIcon = field.nextElementSibling;
        if (toggleIcon && toggleIcon.classList.contains('toggle-password')) {
            toggleIcon.classList.remove("visible");
        }
    });

    const registerFields = document.querySelectorAll("#registerModal input");
    registerFields.forEach(field => {
        field.value = "";
        field.classList.remove("error-input");
        const toggleIcon = field.nextElementSibling;
        if (toggleIcon && toggleIcon.classList.contains('toggle-password')) {
            toggleIcon.classList.remove("visible");
        }
    });

    const warningIcons = document.querySelectorAll(".warning-icon");
    warningIcons.forEach(icon => {
        icon.style.display = "none";
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", function () {
    const passwordInputs = document.querySelectorAll('.password-container input[type="password"]');
    passwordInputs.forEach(input => {
        if (!input.nextElementSibling || !input.nextElementSibling.classList.contains('toggle-password')) {
            const toggleIcon = document.createElement('span');
            toggleIcon.className = 'toggle-password';
            toggleIcon.textContent = "üëÅÔ∏è‚Äçüó®Ô∏è";
            toggleIcon.onclick = () => togglePasswordVisibility(input.id);
            input.parentNode.appendChild(toggleIcon);

            input.addEventListener('input', () => handlePasswordInput(input));

            handlePasswordInput(input);
        }
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥–∞
function validateLogin() {
    const email = document.getElementById("login-email").value;
    const password = document.getElementById("login-password").value;

    fetch('/validate_login', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, password }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            window.location.href = '/';
        } else {
            alert(data.message);
        }
    })
    .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function validateRegister() {
    const name = document.getElementById("name").value;
    const surname = document.getElementById("surname").value;
    const email = document.getElementById("email").value;
    const password = document.getElementById("password").value;
    const repeatPassword = document.getElementById("repeatPassword").value;
    const birthdate = document.getElementById("birthdate").value;

    fetch('/validate_register', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, surname, email, password, repeat_password: repeatPassword, birthdate }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            window.location.href = '/';
        } else {
            alert(data.message);
        }
    })
    .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function toggleMenu() {
    let menu = document.getElementById("userMenu");
    menu.style.display = menu.style.display === "block" ? "none" : "block";
}
// –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
document.addEventListener("click", function (event) {
    let menu = document.getElementById("userMenu");
    let btn = document.querySelector(".user-btn");

    if (menu && btn && !btn.contains(event.target) && !menu.contains(event.target)) {
        menu.style.display = "none";
    }
});

// –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞
document.getElementById("login-btn").addEventListener("click", function(event) {
    event.preventDefault();
    validateLogin();
});

// –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
document.getElementById("register-btn").addEventListener("click", function(event) {
    event.preventDefault();
    validateRegister();
});

document.querySelector(".forgot-password").addEventListener("click", function (event) {
    event.preventDefault();
    closeAll();
    document.getElementById("overlay").style.zIndex = "1500";
    document.getElementById("forgotPasswordModal").style.zIndex = "2000";
    document.getElementById("overlay").classList.add("active");
    document.getElementById("forgotPasswordModal").classList.add("active");
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞
function validateAccountData() {
    const name = document.getElementById("forgot-name").value;
    const surname = document.getElementById("forgot-surname").value;
    const email = document.getElementById("forgot-email").value;
    const birthdate = document.getElementById("forgot-birthdate").value;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    fetch('/validate_account_data', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, surname, email, birthdate }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
            closeAll();
            document.getElementById("overlay").classList.add("active");
            document.getElementById("newPasswordModal").classList.add("active");
        } else {
            // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            alert("–í–≤–µ–¥—ë–Ω–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ä–∞–∑–ª–∏—á–Ω—ã —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
        }
    })
    .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –≤ –æ–∫–Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
document.getElementById("forgot-submit-btn").addEventListener("click", function (event) {
    event.preventDefault();
    validateAccountData(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
function changePassword() {
    const newPassword = document.getElementById("new-password").value;
    const confirmNewPassword = document.getElementById("confirm-new-password").value;
    const email = document.getElementById("forgot-email").value;  // –ü–æ–ª—É—á–∞–µ–º email –∏–∑ —Ñ–æ—Ä–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è

    if (newPassword !== confirmNewPassword) {
        alert("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
        return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏ email –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    fetch('/change_password', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ newPassword, email }),  // –ü–µ—Ä–µ–¥–∞–µ–º email
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert("–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω. –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
            window.location.href = '/';  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        } else {
            alert(data.message);  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        }
    })
    .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –≤ –æ–∫–Ω–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
document.getElementById("new-password-submit-btn").addEventListener("click", function (event) {
    event.preventDefault();
    changePassword(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
});

// –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
document.querySelectorAll('.task-box').forEach(task => {
    task.addEventListener('click', () => {
        // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –ø—Ä–∏ –∫–ª–∏–∫–µ
        task.style.backgroundColor = '#e0e0e0';
        setTimeout(() => {
            task.style.backgroundColor = '';
        }, 200);
    });
});

function updateTime() {
    fetch('http://worldtimeapi.org/api/timezone/Europe/Moscow')
        .then(response => {
            if (!response.ok) throw new Error('Network response was not ok');
            return response.json();
        })
        .then(data => {
            const datetime = new Date(data.datetime);
            const timeString = datetime.toLocaleTimeString('ru-RU', {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false
            });

            const timeElement = document.getElementById('current-time');
            if (timeElement) {
                timeElement.textContent = timeString;
                timeElement.title = "–¢–æ—á–Ω–æ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è"; // –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏:', error);
            // Fallback: –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const now = new Date();
            const timeElement = document.getElementById('current-time');
            if (timeElement) {
                timeElement.textContent = now.toLocaleTimeString('ru-RU');
                timeElement.title = "–õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)";
            }
        });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Å–æ–≤
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏
    let timeElement = document.getElementById('current-time');
    if (!timeElement) {
        const headerTitle = document.querySelector('.header-title');
        if (headerTitle) {
            timeElement = document.createElement('span');
            timeElement.id = 'current-time';
            timeElement.className = 'time-display';
            headerTitle.appendChild(timeElement);
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ hover —á–µ—Ä–µ–∑ JS (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ CSS)
    if (timeElement) {
        timeElement.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.1)';
        });
        timeElement.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1)';
        });
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º —á–∞—Å—ã
    updateTime();
    setInterval(updateTime, 1000);
});